{"ast":null,"code":"import _asyncToGenerator from \"E:\\\\Courses\\\\ITI\\\\Courses\\\\15- Angular\\\\Project\\\\Source Control\\\\CMS-system\\\\client\\\\app-client\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PrescriptionService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = \"assets/test_data/prescriptions.json\";\n  }\n\n  getAllPrescriptions() {\n    return this.http.get(this.baseUrl).pipe(tap(obs => console.log(obs)));\n  }\n\n  getPatientById(id) {\n    return _asyncToGenerator(function* () {\n      return PrescriptionService.allPrescriptions[id - 1];\n    })();\n  }\n\n}\nPrescriptionService.allPrescriptions = [];\n\nPrescriptionService.ɵfac = function PrescriptionService_Factory(t) {\n  return new (t || PrescriptionService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nPrescriptionService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PrescriptionService,\n  factory: PrescriptionService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["E:/Courses/ITI/Courses/15- Angular/Project/Source Control/CMS-system/client/app-client/src/app/Employee/services/prescription.service.ts"],"names":["tap","i0","i1","PrescriptionService","constructor","http","baseUrl","getAllPrescriptions","get","pipe","obs","console","log","getPatientById","id","allPrescriptions","ɵfac","PrescriptionService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,SAASA,GAAT,QAAoB,MAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,OAAO,MAAMC,mBAAN,CAA0B;AAC7BC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKC,OAAL,GAAe,qCAAf;AACH;;AACDC,EAAAA,mBAAmB,GAAG;AAClB,WAAO,KAAKF,IAAL,CAAUG,GAAV,CAAc,KAAKF,OAAnB,EAA4BG,IAA5B,CAAiCT,GAAG,CAAEU,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAV,CAApC,CAAP;AACH;;AACKG,EAAAA,cAAc,CAACC,EAAD,EAAK;AAAA;AACrB,aAAOX,mBAAmB,CAACY,gBAApB,CAAqCD,EAAE,GAAG,CAA1C,CAAP;AADqB;AAExB;;AAV4B;AAYjCX,mBAAmB,CAACY,gBAApB,GAAuC,EAAvC;;AACAZ,mBAAmB,CAACa,IAApB,GAA2B,SAASC,2BAAT,CAAqCC,CAArC,EAAwC;AAAE,SAAO,KAAKA,CAAC,IAAIf,mBAAV,EAA+BF,EAAE,CAACkB,QAAH,CAAYjB,EAAE,CAACkB,UAAf,CAA/B,CAAP;AAAoE,CAAzI;;AACAjB,mBAAmB,CAACkB,KAApB,GAA4B,aAAcpB,EAAE,CAACqB,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAEpB,mBAAT;AAA8BqB,EAAAA,OAAO,EAAErB,mBAAmB,CAACa,IAA3D;AAAiES,EAAAA,UAAU,EAAE;AAA7E,CAAtB,CAA1C","sourcesContent":["import { tap } from 'rxjs';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nexport class PrescriptionService {\r\n    constructor(http) {\r\n        this.http = http;\r\n        this.baseUrl = \"assets/test_data/prescriptions.json\";\r\n    }\r\n    getAllPrescriptions() {\r\n        return this.http.get(this.baseUrl).pipe(tap((obs) => console.log(obs)));\r\n    }\r\n    async getPatientById(id) {\r\n        return PrescriptionService.allPrescriptions[id - 1];\r\n    }\r\n}\r\nPrescriptionService.allPrescriptions = [];\r\nPrescriptionService.ɵfac = function PrescriptionService_Factory(t) { return new (t || PrescriptionService)(i0.ɵɵinject(i1.HttpClient)); };\r\nPrescriptionService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: PrescriptionService, factory: PrescriptionService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}